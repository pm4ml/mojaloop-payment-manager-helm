name: Validate charts

on:
  pull_request:
  push:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  validate_sim_backend_manifests:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - uses: cachix/install-nix-action@v13
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/8e4fe32876ca15e3d5eb3ecd3ca0b224417f5f17.tar.gz

    - name: Install dependencies
      run: nix-env -if ci-helpers/default.nix

    - name: Validate generated sim backend manifests
      run: |-
        set -euxo pipefail

        CAPABILITIES="-a apps/v1/Deployment"
        helm template $CAPABILITIES testname ./mojaloop-simulator-backend --output-dir manifests_1_17
        kubeconform -strict -kubernetes-version 1.17.9 manifests_1_17

        CAPABILITIES="-a apps/v1/Deployment -a networking.k8s.io/v1/Ingress"
        helm template $CAPABILITIES testname ./mojaloop-simulator-backend --output-dir manifests_1_21
        kubeconform -strict -kubernetes-version 1.21.1 manifests_1_21

    - name: Store templated manifests on failure
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        retention-days: 4 # over the weekend plus a bit
        name: failed_templates
        path: |
          manifests_1_17
          manifests_1_21


  validate_payment_manager_manifests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: cachix/install-nix-action@v13
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/8e4fe32876ca15e3d5eb3ecd3ca0b224417f5f17.tar.gz

    - name: Install dependencies
      run: nix-env -if ci-helpers/default.nix

    - name: Validate generated payment manager manifests
      run: |-
        set -euxo pipefail
        VALUES="--set management-api.config.tlsServerPvtKeyData=anything --set management-api.config.tlsServerCAData=test"
        CAPABILITIES="-a apps/v1/Deployment"
        helm template --dependency-update $VALUES $CAPABILITIES testname ./mojaloop-payment-manager --output-dir manifests
        kubeconform -strict -kubernetes-version 1.17.9 manifests
        # Note that we don't test against 1.21 here because the currently used version of the TTK
        # chart is not compatible with it.

    - name: Store templated manifests on failure
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        retention-days: 4 # over the weekend plus a bit
        name: failed_templates
        path: manifests


  smoke_test_deploy_sim_backend:
    needs: validate_sim_backend_manifests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: cachix/install-nix-action@v13
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/8e4fe32876ca15e3d5eb3ecd3ca0b224417f5f17.tar.gz

    - name: Install dependencies
      run: nix-env -if ci-helpers/default.nix

    - name: Start cluster
      run: |-
        # --k3s-server-arg args according to
        # https://k3d.io/faq/faq/#solved-nodes-fail-to-start-or-get-stuck-in-notready-state-with-log-nf_conntrack_max-permission-denied
        k3d cluster create \
          --k3s-server-arg "--kube-proxy-arg=conntrack-max-per-core=0" \
          --k3s-agent-arg "--kube-proxy-arg=conntrack-max-per-core=0" \
          --kubeconfig-update-default \
          --kubeconfig-switch-context \
          --image=rancher/k3s:v1.17.9-k3s1 \
          int-test

    - name: Deploy
      run: time helm install --wait --wait-for-jobs int-test ./mojaloop-simulator-backend/

    - name: Print docker containers to check any issues with the cluster
      if: ${{ failure() }}
      run: docker ps

    - name: Print resources
      if: ${{ always() }}
      run: kubectl get svc,deploy,sts,pv,pvc,configmap,job,pod -A

    - name: Describe resources
      if: ${{ failure() }}
      run: kubectl describe svc,deploy,sts,pv,pvc,configmap,job,pod -A

    - name: Print secret values
      if: ${{ failure() }}
      run: |-
        kubectl get secrets -o json | jq -r '.items[] | { name: .metadata.name, data: .data | map_values(@base64d) }'

  # smoke_test_deploy_payment_manager:
  #   timeout-minutes: 15
  #   needs:
  #   - validate_payment_manager_manifests
  #   - smoke_test_deploy_sim_backend
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #
  #   - uses: cachix/install-nix-action@v13
  #     with:
  #       nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/8e4fe32876ca15e3d5eb3ecd3ca0b224417f5f17.tar.gz
  #
  #   - name: Install dependencies
  #     run: nix-env -if ci-helpers/default.nix
  #
  #   - name: Start cluster
  #     run: |-
  #       k3d cluster create \
  #         --kubeconfig-update-default \
  #         --kubeconfig-switch-context \
  #         --image=rancher/k3s:v1.17.9-k3s1 \
  #         int-test
  #
  #   - name: Deploy
  #     run: |-
  #       time \
  #         helm install \
  #           --dependency-update \
  #           --wait \
  #           --wait-for-jobs \
  #           -f environments/values-ci.yaml \
  #           int-test \
  #           ./mojaloop-payment-manager
  #
  #   # Enable tmate debugging of failed, or manually-triggered workflows if the input option was provided
  #   - name: Setup tmate session
  #     uses: mxschmitt/action-tmate@v3
  #     if: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled) || failure() }}
