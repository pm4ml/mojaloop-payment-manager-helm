{{- $fullName := include "self.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "self.fullname" . }}
  labels:
{{ include "self.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "self.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "self.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.imagePullCredentials }}
      imagePullSecrets:
        - name: {{ include "self.fullname" . }}-cred
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            # # this is the outbound api endpoint on the mojaloop-connector
            # - name: "MLCONN_OUTBOUND_ENDPOINT"
            #   value: "{{ .Values.env.MLCONN_OUTBOUND_ENDPOINT }}"
            {{- range $k, $v := .Values.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
            {{- range $k, $v := .Values.envFromSecrets }}
            - name: {{ $k }}
              valueFrom:
                secretKeyRef:
                  name: {{ $v.secret.name }}
                  key: {{ $v.secret.key | quote }}
            {{- end }}
          {{- if .Values.envSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.envSecret }}
          {{- end }}
          ports:
          {{- range .Values.ports }}
            - name: {{ .port | quote }}
              containerPort: {{ .containerPort }}
              protocol: {{ .protocol }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- range $secretName, $secretValue := .Values.secrets }}
            - name: {{ $fullName }}-secret-{{ $secretName }}
              mountPath: "/secrets/{{ $secretName }}/"
          {{- end }}
      volumes:
      {{- range $secretName, $secretValue := .Values.secrets }}
        - name: {{ $fullName }}-secret-{{ $secretName }}
          secret:
            secretName: {{ $fullName }}-{{ $secretName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
