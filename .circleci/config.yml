version: 2.1

defaults_Dependencies: &defaults_Dependencies
  name: Install default dependencies
  command: |
    apk --no-cache add git
    apk --no-cache add bash
    apk --no-cache add ca-certificates
    apk --no-cache add curl
    apk --no-cache add openssh-client
    apk add --no-cache -t python2
    apk add --no-cache -t build-dependencies make gcc g++ libtool autoconf automake

defaults_helm_dependencies: &defaults_helm_dependencies
  name: Install default helm dependencies
  command: |
    helm repo add bitnami https://charts.bitnami.com/bitnami
    helm repo add prometheus https://prometheus-community.github.io/helm-charts
    helm repo add mojaloop http://mojaloop.io/helm/repo
    helm repo add charts https://mojaloop.github.io/charts/repo
    helm repo update

jobs:
  lint:
    working_directory: ~/repo
    docker:
      - image: alpine/helm:3.5.2
    steps:
      - run:
          <<: *defaults_Dependencies
      - checkout
      - run:
          <<: *defaults_helm_dependencies
      - run:
          name: Update Helm Charts
          command: ./scripts/update-charts-dep.sh
      - run:
          name: Linting Helm Charts
          command: ./scripts/lint-charts.sh
      - run:
          name: Rendering Helm Charts
          command: |
            curl -L --output /usr/bin/yq https://github.com/mikefarah/yq/releases/download/v4.45.1/yq_linux_amd64
            chmod +x /usr/bin/yq
            yq --version
            bash ./scripts/lint-render.sh
      - persist_to_workspace:
          root: .
          paths:
            - test
            - package.json
            - package-lock.json
            - eslint.config.mjs

  test-lint-yaml:
    executor: default-machine
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Set up nvm
          command: |
            # Note: this needs to be separate from the nvm install step
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
      - run:
          name: Install and run linter
          command: |
            nvm install v20.18.0 && nvm alias default v20.18.0
            node --version
            npm ci --legacy-peer-deps
            npm run lint || { echo -e "\e[31mLinting failed, check the report in artifacts\e[0m"; exit 1; }
      - store_artifacts:
          path: /home/circleci/project/test/lint.html
          destination: Lint-YAML
  test-lint-k8s:
    executor: default-machine
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Download kubectl-validate
          command: |
            curl -L --output ./kubectl-validate https://github.com/kubernetes-sigs/kubectl-validate/releases/download/v0.0.4/kubectl-validate_linux_amd64.tar.gz
            tar -xvf ./kubectl-validate
            chmod +x ./kubectl-validate
      - run:
          name: Run kubectl-validate
          command: |
            ./kubectl-validate test --version 1.32 |& grep -v $'OK\033\[0m$' | sed '/^$/N;/^\n$/D'
      - store_artifacts:
          path: /home/circleci/project/test
          destination: Lint-k8s

  build_and_publish_chart:
    working_directory: ~/repo
    docker:
      - image: alpine/helm:3.5.2
    steps:
      - run:
          <<: *defaults_Dependencies
      - add_ssh_keys:
         fingerprints:
           - "27:60:48:42:65:59:f3:15:37:63:f1:ba:43:0f:9c:5b"
      - checkout
      - run:
          <<: *defaults_helm_dependencies
      - run:
          name: Update dependencies
          command: ./scripts/update-charts-dep.sh
      - run:
          name: Package Helm Chart
          command: ./scripts/package.sh
      - run:
          name: Add new chart to chart repo and publish
          command: |
            mv repo repoIGNORE
            git checkout gh-pages
            git checkout master -- .circleci/config.yml
            cp ./repoIGNORE/* repo
            rm -rf repoIGNORE
            cd ./repo
            helm repo index --url https://$CIRCLE_PROJECT_USERNAME.github.io/$CIRCLE_PROJECT_REPONAME/repo .
            git add ./*.tgz ./index.yaml
            git config user.email "cicd@modusbox.com"
            git config user.name "CICD at ModusBox"
            git commit -m "Automated deployment to GitHub Pages" --allow-empty
            GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no" git push origin gh-pages

workflows:
  version: 2
  build_and_publish:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
            branches:
              ignore:
                - gh-pages
      - test-lint-yaml:
          context: org-global
          requires:
            - lint
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - /.*/
                - gh-pages
      - test-lint-k8s:
          context: org-global
          requires:
            - lint
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - /.*/
                - gh-pages
      - build_and_publish_chart:
          requires:
            - lint
            - test-lint-yaml
            - test-lint-k8s
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - /.*/
                - gh-pages
